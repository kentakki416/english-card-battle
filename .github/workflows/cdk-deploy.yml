name: 🚀 CDK Deploy
on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: "デプロイする環境を選択してください"
        default: "dev"
        required: true
        options:
          - dev
          - stg
          - prd
      execute_type:
        type: choice
        description: "実行方法を選択してください"
        default: "no-execute"
        required: true
        options:
          - execute
          - no-execute
      target_resource:
        type: string
        description: "デプロイするスタック名を入力してください。入力がなければ全てのスタックがデプロイされます。"
        required: false
permissions:
  contents: read
  id-token: write
defaults:
  run:
    shell: bash          
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
env:
  ENVIRONMENT: ${{ github.event.inputs.environment }}
  EXECUTE_TYPE: ${{ github.event.inputs.execute_type }}
  TARGET_RESOURCE: ${{ github.event.inputs.target_resource }}
  AWS_REGION: ap-northeast-1
  AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}

jobs:
  deploy:
    name: 🚀 CDK Deploy
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: 📥 リポジトリをチェックアウト
        uses: actions/checkout@v4

      - name: 🟢 Node.jsのセットアップ
        uses: actions/setup-node@v5
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: infra/cdk/package-lock.json

      - name: 📦 依存関係をインストール
        working-directory: infra/cdk
        run: npm ci

      - name: 🔧 TypeScriptをビルド
        working-directory: infra/cdk
        run: npm run build

      - name: 🔐 AWS認証情報を設定
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
      - name: 🚀 CDK Deploy
        working-directory: infra/cdk
        run: |
          # 特定リソースが指定されている場合
          if [ -n "${{ env.TARGET_RESOURCE }}" ]; then
            COMMAND="npm run deploy:${{ env.ENVIRONMENT }}:${{ env.EXECUTE_TYPE }} -- ${{ env.TARGET_RESOURCE }}"
          else 
            COMMAND="npm run deploy:${{ env.ENVIRONMENT }}:${{ env.EXECUTE_TYPE }} -- --all"
          fi
          
          # コマンド実行
          echo "実行コマンド: $COMMAND"
          eval $COMMAND
