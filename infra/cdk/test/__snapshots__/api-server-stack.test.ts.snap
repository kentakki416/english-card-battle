// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`/Users/s16865/workspace/local/product/english-card-battle/infra/cdk/test/api-server-stack.test.ts 環境別スナップショットテスト dev環境のスナップショットが一致する 1`] = `
{
  "Outputs": {
    "EcrConstructEcrRepositoryUri1765FAFF": {
      "Description": "ECR Repository URI",
      "Value": {
        "Fn::Join": [
          "",
          [
            {
              "Fn::Select": [
                4,
                {
                  "Fn::Split": [
                    ":",
                    {
                      "Fn::GetAtt": [
                        "EcrConstructRepository7CDA447F",
                        "Arn",
                      ],
                    },
                  ],
                },
              ],
            },
            ".dkr.ecr.",
            {
              "Fn::Select": [
                3,
                {
                  "Fn::Split": [
                    ":",
                    {
                      "Fn::GetAtt": [
                        "EcrConstructRepository7CDA447F",
                        "Arn",
                      ],
                    },
                  ],
                },
              ],
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "EcrConstructRepository7CDA447F",
            },
          ],
        ],
      },
    },
    "EcsConstructLoadBalancerDNSF2F53CE6": {
      "Value": {
        "Fn::GetAtt": [
          "EcsConstructAlb5CEC5A25",
          "DNSName",
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "EcrConstructRepository7CDA447F": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ImageScanningConfiguration": {
          "ScanOnPush": true,
        },
        "LifecyclePolicy": {
          "LifecyclePolicyText": "{"rules":[{"rulePriority":1,"selection":{"tagStatus":"untagged","countType":"sinceImagePushed","countNumber":1,"countUnit":"days"},"action":{"type":"expire"}},{"rulePriority":2,"selection":{"tagStatus":"any","countType":"imageCountMoreThan","countNumber":5},"action":{"type":"expire"}}]}",
        },
        "RepositoryName": "english-card-battle-api-dev",
      },
      "Type": "AWS::ECR::Repository",
      "UpdateReplacePolicy": "Delete",
    },
    "EcsConstructAlb5CEC5A25": {
      "DependsOn": [
        "VpcConstructVpcPublicSubnet1DefaultRoute19512509",
        "VpcConstructVpcPublicSubnet1RouteTableAssociation6FC97BDA",
        "VpcConstructVpcPublicSubnet2DefaultRouteDF17EB05",
        "VpcConstructVpcPublicSubnet2RouteTableAssociationFE2393CB",
      ],
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "EcsConstructSgAlbDA034DDC",
              "GroupId",
            ],
          },
        ],
        "Subnets": [
          {
            "Ref": "VpcConstructVpcPublicSubnet1SubnetDD7139F9",
          },
          {
            "Ref": "VpcConstructVpcPublicSubnet2Subnet24509F7A",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "EcsConstructAlbAlbListener8102378F": {
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "EcsConstructAlbAlbListenerFromAppTargetGroupGroupA621B50F",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": {
          "Ref": "EcsConstructAlb5CEC5A25",
        },
        "Port": 80,
        "Protocol": "HTTP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "EcsConstructAlbAlbListenerFromAppTargetGroupGroupA621B50F": {
      "Properties": {
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "ip",
        "VpcId": {
          "Ref": "VpcConstructVpc3805DAA4",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "EcsConstructEcsCluster89B63FC3": {
      "Properties": {
        "ClusterSettings": [
          {
            "Name": "containerInsights",
            "Value": "enabled",
          },
        ],
      },
      "Type": "AWS::ECS::Cluster",
    },
    "EcsConstructEcsServiceTaskRoleCD4F9911": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonSSMFullAccess",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "EcsConstructEcsServiceTaskRoleDefaultPolicyC7469938": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ssmmessages:CreateControlChannel",
                "ssmmessages:CreateDataChannel",
                "ssmmessages:OpenControlChannel",
                "ssmmessages:OpenDataChannel",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "logs:DescribeLogGroups",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:DescribeLogStreams",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "EcsConstructEcsServiceTaskRoleDefaultPolicyC7469938",
        "Roles": [
          {
            "Ref": "EcsConstructEcsServiceTaskRoleCD4F9911",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "EcsConstructEcsTaskExecutionRole12DDDA63": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "EcsConstructEcsTaskExecutionRoleDefaultPolicyC7661922": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "EcsConstructTaskDefinitionapiLogGroupD1A96BBA",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "EcsConstructEcsTaskExecutionRoleDefaultPolicyC7661922",
        "Roles": [
          {
            "Ref": "EcsConstructEcsTaskExecutionRole12DDDA63",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "EcsConstructFargateServiceDFC2525C": {
      "DependsOn": [
        "EcsConstructAlbAlbListenerFromAppTargetGroupGroupA621B50F",
        "EcsConstructAlbAlbListener8102378F",
        "EcsConstructEcsServiceTaskRoleDefaultPolicyC7469938",
        "EcsConstructEcsServiceTaskRoleCD4F9911",
      ],
      "Properties": {
        "Cluster": {
          "Ref": "EcsConstructEcsCluster89B63FC3",
        },
        "DeploymentConfiguration": {
          "Alarms": {
            "AlarmNames": [],
            "Enable": false,
            "Rollback": false,
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DesiredCount": 1,
        "EnableECSManagedTags": false,
        "EnableExecuteCommand": true,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": [
          {
            "ContainerName": "api",
            "ContainerPort": 80,
            "TargetGroupArn": {
              "Ref": "EcsConstructAlbAlbListenerFromAppTargetGroupGroupA621B50F",
            },
          },
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "EcsConstructSgFargateA4239C18",
                  "GroupId",
                ],
              },
            ],
            "Subnets": [
              {
                "Ref": "VpcConstructVpcPrivateSubnet1Subnet6F75C6CC",
              },
              {
                "Ref": "VpcConstructVpcPrivateSubnet2SubnetEA9D1CCF",
              },
            ],
          },
        },
        "TaskDefinition": {
          "Ref": "EcsConstructTaskDefinition7D5C9834",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "EcsConstructSgAlbDA034DDC": {
      "Properties": {
        "GroupDescription": "devTestStack/EcsConstruct/SgAlb",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:ALL PORTS",
            "FromPort": 0,
            "IpProtocol": "tcp",
            "ToPort": 65535,
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
        ],
        "VpcId": {
          "Ref": "VpcConstructVpc3805DAA4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "EcsConstructSgAlbtodevTestStackEcsConstructSgFargate7E309DC180929DD2F3": {
      "Properties": {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "EcsConstructSgFargateA4239C18",
            "GroupId",
          ],
        },
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "EcsConstructSgAlbDA034DDC",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 80,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "EcsConstructSgFargateA4239C18": {
      "Properties": {
        "GroupDescription": "devTestStack/EcsConstruct/SgFargate",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:ALL PORTS",
            "FromPort": 0,
            "IpProtocol": "tcp",
            "ToPort": 65535,
          },
        ],
        "VpcId": {
          "Ref": "VpcConstructVpc3805DAA4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "EcsConstructSgFargatefromdevTestStackEcsConstructSgAlbFDC46118809DCB8883": {
      "Properties": {
        "Description": "from devTestStackEcsConstructSgAlbFDC46118:80",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "EcsConstructSgFargateA4239C18",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "EcsConstructSgAlbDA034DDC",
            "GroupId",
          ],
        },
        "ToPort": 80,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "EcsConstructTaskDefinition7D5C9834": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Essential": true,
            "Image": "amazon/amazon-ecs-sample",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "EcsConstructTaskDefinitionapiLogGroupD1A96BBA",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "englishCardBattle",
              },
            },
            "Name": "api",
            "PortMappings": [
              {
                "ContainerPort": 80,
                "HostPort": 80,
                "Protocol": "tcp",
              },
            ],
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "EcsConstructEcsTaskExecutionRole12DDDA63",
            "Arn",
          ],
        },
        "Family": "devTestStackEcsConstructTaskDefinitionCC2DACA3",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "EcsConstructEcsServiceTaskRoleCD4F9911",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "EcsConstructTaskDefinitionapiLogGroupD1A96BBA": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "VpcConstructVpc3805DAA4": {
      "Properties": {
        "CidrBlock": "10.100.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "devTestStack/VpcConstruct/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VpcConstructVpcIGWEF0A1417": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "devTestStack/VpcConstruct/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VpcConstructVpcPrivateSubnet1DefaultRoute74CC6283": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcConstructVpcPublicSubnet1NATGatewayAC5B8D30",
        },
        "RouteTableId": {
          "Ref": "VpcConstructVpcPrivateSubnet1RouteTable4A22E9B0",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcConstructVpcPrivateSubnet1RouteTable4A22E9B0": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "devTestStack/VpcConstruct/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VpcConstructVpc3805DAA4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcConstructVpcPrivateSubnet1RouteTableAssociationCBF38271": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcConstructVpcPrivateSubnet1RouteTable4A22E9B0",
        },
        "SubnetId": {
          "Ref": "VpcConstructVpcPrivateSubnet1Subnet6F75C6CC",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcConstructVpcPrivateSubnet1Subnet6F75C6CC": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.100.2.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "devTestStack/VpcConstruct/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VpcConstructVpc3805DAA4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcConstructVpcPrivateSubnet2DefaultRouteE1DD5E5C": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcConstructVpcPublicSubnet1NATGatewayAC5B8D30",
        },
        "RouteTableId": {
          "Ref": "VpcConstructVpcPrivateSubnet2RouteTable8CAFC294",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcConstructVpcPrivateSubnet2RouteTable8CAFC294": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "devTestStack/VpcConstruct/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VpcConstructVpc3805DAA4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcConstructVpcPrivateSubnet2RouteTableAssociation30321E0F": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcConstructVpcPrivateSubnet2RouteTable8CAFC294",
        },
        "SubnetId": {
          "Ref": "VpcConstructVpcPrivateSubnet2SubnetEA9D1CCF",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcConstructVpcPrivateSubnet2SubnetEA9D1CCF": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.100.3.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "devTestStack/VpcConstruct/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VpcConstructVpc3805DAA4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcConstructVpcPublicSubnet1DefaultRoute19512509": {
      "DependsOn": [
        "VpcConstructVpcVPCGW1B486578",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcConstructVpcIGWEF0A1417",
        },
        "RouteTableId": {
          "Ref": "VpcConstructVpcPublicSubnet1RouteTable86FD3C2E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcConstructVpcPublicSubnet1EIPBB69F383": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "devTestStack/VpcConstruct/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcConstructVpcPublicSubnet1NATGatewayAC5B8D30": {
      "DependsOn": [
        "VpcConstructVpcPublicSubnet1DefaultRoute19512509",
        "VpcConstructVpcPublicSubnet1RouteTableAssociation6FC97BDA",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcConstructVpcPublicSubnet1EIPBB69F383",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VpcConstructVpcPublicSubnet1SubnetDD7139F9",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "devTestStack/VpcConstruct/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcConstructVpcPublicSubnet1RouteTable86FD3C2E": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "devTestStack/VpcConstruct/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VpcConstructVpc3805DAA4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcConstructVpcPublicSubnet1RouteTableAssociation6FC97BDA": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcConstructVpcPublicSubnet1RouteTable86FD3C2E",
        },
        "SubnetId": {
          "Ref": "VpcConstructVpcPublicSubnet1SubnetDD7139F9",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcConstructVpcPublicSubnet1SubnetDD7139F9": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.100.0.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "devTestStack/VpcConstruct/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VpcConstructVpc3805DAA4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcConstructVpcPublicSubnet2DefaultRouteDF17EB05": {
      "DependsOn": [
        "VpcConstructVpcVPCGW1B486578",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcConstructVpcIGWEF0A1417",
        },
        "RouteTableId": {
          "Ref": "VpcConstructVpcPublicSubnet2RouteTableFB581907",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcConstructVpcPublicSubnet2RouteTableAssociationFE2393CB": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcConstructVpcPublicSubnet2RouteTableFB581907",
        },
        "SubnetId": {
          "Ref": "VpcConstructVpcPublicSubnet2Subnet24509F7A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcConstructVpcPublicSubnet2RouteTableFB581907": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "devTestStack/VpcConstruct/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VpcConstructVpc3805DAA4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcConstructVpcPublicSubnet2Subnet24509F7A": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.100.1.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "devTestStack/VpcConstruct/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VpcConstructVpc3805DAA4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcConstructVpcVPCGW1B486578": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "VpcConstructVpcIGWEF0A1417",
        },
        "VpcId": {
          "Ref": "VpcConstructVpc3805DAA4",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`/Users/s16865/workspace/local/product/english-card-battle/infra/cdk/test/api-server-stack.test.ts 環境別スナップショットテスト prd環境のスナップショットが一致する 1`] = `
{
  "Outputs": {
    "EcrConstructEcrRepositoryUri1765FAFF": {
      "Description": "ECR Repository URI",
      "Value": {
        "Fn::Join": [
          "",
          [
            {
              "Fn::Select": [
                4,
                {
                  "Fn::Split": [
                    ":",
                    {
                      "Fn::GetAtt": [
                        "EcrConstructRepository7CDA447F",
                        "Arn",
                      ],
                    },
                  ],
                },
              ],
            },
            ".dkr.ecr.",
            {
              "Fn::Select": [
                3,
                {
                  "Fn::Split": [
                    ":",
                    {
                      "Fn::GetAtt": [
                        "EcrConstructRepository7CDA447F",
                        "Arn",
                      ],
                    },
                  ],
                },
              ],
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "EcrConstructRepository7CDA447F",
            },
          ],
        ],
      },
    },
    "EcsConstructLoadBalancerDNSF2F53CE6": {
      "Value": {
        "Fn::GetAtt": [
          "EcsConstructAlb5CEC5A25",
          "DNSName",
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "EcrConstructRepository7CDA447F": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ImageScanningConfiguration": {
          "ScanOnPush": true,
        },
        "LifecyclePolicy": {
          "LifecyclePolicyText": "{"rules":[{"rulePriority":1,"selection":{"tagStatus":"untagged","countType":"sinceImagePushed","countNumber":1,"countUnit":"days"},"action":{"type":"expire"}},{"rulePriority":2,"selection":{"tagStatus":"any","countType":"imageCountMoreThan","countNumber":5},"action":{"type":"expire"}}]}",
        },
        "RepositoryName": "english-card-battle-api-prd",
      },
      "Type": "AWS::ECR::Repository",
      "UpdateReplacePolicy": "Delete",
    },
    "EcsConstructAlb5CEC5A25": {
      "DependsOn": [
        "VpcConstructVpcPublicSubnet1DefaultRoute19512509",
        "VpcConstructVpcPublicSubnet1RouteTableAssociation6FC97BDA",
        "VpcConstructVpcPublicSubnet2DefaultRouteDF17EB05",
        "VpcConstructVpcPublicSubnet2RouteTableAssociationFE2393CB",
      ],
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "EcsConstructSgAlbDA034DDC",
              "GroupId",
            ],
          },
        ],
        "Subnets": [
          {
            "Ref": "VpcConstructVpcPublicSubnet1SubnetDD7139F9",
          },
          {
            "Ref": "VpcConstructVpcPublicSubnet2Subnet24509F7A",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "EcsConstructAlbAlbListener8102378F": {
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "EcsConstructAlbAlbListenerFromAppTargetGroupGroupA621B50F",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": {
          "Ref": "EcsConstructAlb5CEC5A25",
        },
        "Port": 80,
        "Protocol": "HTTP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "EcsConstructAlbAlbListenerFromAppTargetGroupGroupA621B50F": {
      "Properties": {
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "ip",
        "VpcId": {
          "Ref": "VpcConstructVpc3805DAA4",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "EcsConstructEcsCluster89B63FC3": {
      "Properties": {
        "ClusterSettings": [
          {
            "Name": "containerInsights",
            "Value": "enabled",
          },
        ],
      },
      "Type": "AWS::ECS::Cluster",
    },
    "EcsConstructEcsServiceTaskRoleCD4F9911": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonSSMFullAccess",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "EcsConstructEcsTaskExecutionRole12DDDA63": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "EcsConstructEcsTaskExecutionRoleDefaultPolicyC7661922": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "EcsConstructTaskDefinitionapiLogGroupD1A96BBA",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "EcsConstructEcsTaskExecutionRoleDefaultPolicyC7661922",
        "Roles": [
          {
            "Ref": "EcsConstructEcsTaskExecutionRole12DDDA63",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "EcsConstructFargateServiceDFC2525C": {
      "DependsOn": [
        "EcsConstructAlbAlbListenerFromAppTargetGroupGroupA621B50F",
        "EcsConstructAlbAlbListener8102378F",
        "EcsConstructEcsServiceTaskRoleCD4F9911",
      ],
      "Properties": {
        "Cluster": {
          "Ref": "EcsConstructEcsCluster89B63FC3",
        },
        "DeploymentConfiguration": {
          "Alarms": {
            "AlarmNames": [],
            "Enable": false,
            "Rollback": false,
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DesiredCount": 3,
        "EnableECSManagedTags": false,
        "EnableExecuteCommand": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": [
          {
            "ContainerName": "api",
            "ContainerPort": 80,
            "TargetGroupArn": {
              "Ref": "EcsConstructAlbAlbListenerFromAppTargetGroupGroupA621B50F",
            },
          },
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "EcsConstructSgFargateA4239C18",
                  "GroupId",
                ],
              },
            ],
            "Subnets": [
              {
                "Ref": "VpcConstructVpcPrivateSubnet1Subnet6F75C6CC",
              },
              {
                "Ref": "VpcConstructVpcPrivateSubnet2SubnetEA9D1CCF",
              },
            ],
          },
        },
        "TaskDefinition": {
          "Ref": "EcsConstructTaskDefinition7D5C9834",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "EcsConstructSgAlbDA034DDC": {
      "Properties": {
        "GroupDescription": "prdTestStack/EcsConstruct/SgAlb",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:ALL PORTS",
            "FromPort": 0,
            "IpProtocol": "tcp",
            "ToPort": 65535,
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
        ],
        "VpcId": {
          "Ref": "VpcConstructVpc3805DAA4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "EcsConstructSgAlbtoprdTestStackEcsConstructSgFargateF426588680FAD2A4B6": {
      "Properties": {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "EcsConstructSgFargateA4239C18",
            "GroupId",
          ],
        },
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "EcsConstructSgAlbDA034DDC",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 80,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "EcsConstructSgFargateA4239C18": {
      "Properties": {
        "GroupDescription": "prdTestStack/EcsConstruct/SgFargate",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:ALL PORTS",
            "FromPort": 0,
            "IpProtocol": "tcp",
            "ToPort": 65535,
          },
        ],
        "VpcId": {
          "Ref": "VpcConstructVpc3805DAA4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "EcsConstructSgFargatefromprdTestStackEcsConstructSgAlbDE1165DB80C3F0D6D2": {
      "Properties": {
        "Description": "from prdTestStackEcsConstructSgAlbDE1165DB:80",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "EcsConstructSgFargateA4239C18",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "EcsConstructSgAlbDA034DDC",
            "GroupId",
          ],
        },
        "ToPort": 80,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "EcsConstructTaskDefinition7D5C9834": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Essential": true,
            "Image": "amazon/amazon-ecs-sample",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "EcsConstructTaskDefinitionapiLogGroupD1A96BBA",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "englishCardBattle",
              },
            },
            "Name": "api",
            "PortMappings": [
              {
                "ContainerPort": 80,
                "HostPort": 80,
                "Protocol": "tcp",
              },
            ],
          },
        ],
        "Cpu": "1024",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "EcsConstructEcsTaskExecutionRole12DDDA63",
            "Arn",
          ],
        },
        "Family": "prdTestStackEcsConstructTaskDefinition295B45B4",
        "Memory": "2048",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "EcsConstructEcsServiceTaskRoleCD4F9911",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "EcsConstructTaskDefinitionapiLogGroupD1A96BBA": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "VpcConstructVpc3805DAA4": {
      "Properties": {
        "CidrBlock": "10.102.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "prdTestStack/VpcConstruct/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VpcConstructVpcIGWEF0A1417": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "prdTestStack/VpcConstruct/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VpcConstructVpcPrivateSubnet1DefaultRoute74CC6283": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcConstructVpcPublicSubnet1NATGatewayAC5B8D30",
        },
        "RouteTableId": {
          "Ref": "VpcConstructVpcPrivateSubnet1RouteTable4A22E9B0",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcConstructVpcPrivateSubnet1RouteTable4A22E9B0": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "prdTestStack/VpcConstruct/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VpcConstructVpc3805DAA4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcConstructVpcPrivateSubnet1RouteTableAssociationCBF38271": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcConstructVpcPrivateSubnet1RouteTable4A22E9B0",
        },
        "SubnetId": {
          "Ref": "VpcConstructVpcPrivateSubnet1Subnet6F75C6CC",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcConstructVpcPrivateSubnet1Subnet6F75C6CC": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.102.2.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "prdTestStack/VpcConstruct/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VpcConstructVpc3805DAA4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcConstructVpcPrivateSubnet2DefaultRouteE1DD5E5C": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcConstructVpcPublicSubnet2NATGateway1E4C09B6",
        },
        "RouteTableId": {
          "Ref": "VpcConstructVpcPrivateSubnet2RouteTable8CAFC294",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcConstructVpcPrivateSubnet2RouteTable8CAFC294": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "prdTestStack/VpcConstruct/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VpcConstructVpc3805DAA4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcConstructVpcPrivateSubnet2RouteTableAssociation30321E0F": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcConstructVpcPrivateSubnet2RouteTable8CAFC294",
        },
        "SubnetId": {
          "Ref": "VpcConstructVpcPrivateSubnet2SubnetEA9D1CCF",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcConstructVpcPrivateSubnet2SubnetEA9D1CCF": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.102.3.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "prdTestStack/VpcConstruct/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VpcConstructVpc3805DAA4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcConstructVpcPublicSubnet1DefaultRoute19512509": {
      "DependsOn": [
        "VpcConstructVpcVPCGW1B486578",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcConstructVpcIGWEF0A1417",
        },
        "RouteTableId": {
          "Ref": "VpcConstructVpcPublicSubnet1RouteTable86FD3C2E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcConstructVpcPublicSubnet1EIPBB69F383": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "prdTestStack/VpcConstruct/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcConstructVpcPublicSubnet1NATGatewayAC5B8D30": {
      "DependsOn": [
        "VpcConstructVpcPublicSubnet1DefaultRoute19512509",
        "VpcConstructVpcPublicSubnet1RouteTableAssociation6FC97BDA",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcConstructVpcPublicSubnet1EIPBB69F383",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VpcConstructVpcPublicSubnet1SubnetDD7139F9",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "prdTestStack/VpcConstruct/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcConstructVpcPublicSubnet1RouteTable86FD3C2E": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "prdTestStack/VpcConstruct/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VpcConstructVpc3805DAA4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcConstructVpcPublicSubnet1RouteTableAssociation6FC97BDA": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcConstructVpcPublicSubnet1RouteTable86FD3C2E",
        },
        "SubnetId": {
          "Ref": "VpcConstructVpcPublicSubnet1SubnetDD7139F9",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcConstructVpcPublicSubnet1SubnetDD7139F9": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.102.0.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "prdTestStack/VpcConstruct/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VpcConstructVpc3805DAA4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcConstructVpcPublicSubnet2DefaultRouteDF17EB05": {
      "DependsOn": [
        "VpcConstructVpcVPCGW1B486578",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcConstructVpcIGWEF0A1417",
        },
        "RouteTableId": {
          "Ref": "VpcConstructVpcPublicSubnet2RouteTableFB581907",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcConstructVpcPublicSubnet2EIP8D711CA6": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "prdTestStack/VpcConstruct/Vpc/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcConstructVpcPublicSubnet2NATGateway1E4C09B6": {
      "DependsOn": [
        "VpcConstructVpcPublicSubnet2DefaultRouteDF17EB05",
        "VpcConstructVpcPublicSubnet2RouteTableAssociationFE2393CB",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcConstructVpcPublicSubnet2EIP8D711CA6",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VpcConstructVpcPublicSubnet2Subnet24509F7A",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "prdTestStack/VpcConstruct/Vpc/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcConstructVpcPublicSubnet2RouteTableAssociationFE2393CB": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcConstructVpcPublicSubnet2RouteTableFB581907",
        },
        "SubnetId": {
          "Ref": "VpcConstructVpcPublicSubnet2Subnet24509F7A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcConstructVpcPublicSubnet2RouteTableFB581907": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "prdTestStack/VpcConstruct/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VpcConstructVpc3805DAA4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcConstructVpcPublicSubnet2Subnet24509F7A": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.102.1.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "prdTestStack/VpcConstruct/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VpcConstructVpc3805DAA4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcConstructVpcVPCGW1B486578": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "VpcConstructVpcIGWEF0A1417",
        },
        "VpcId": {
          "Ref": "VpcConstructVpc3805DAA4",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`/Users/s16865/workspace/local/product/english-card-battle/infra/cdk/test/api-server-stack.test.ts 環境別スナップショットテスト stg環境のスナップショットが一致する 1`] = `
{
  "Outputs": {
    "EcrConstructEcrRepositoryUri1765FAFF": {
      "Description": "ECR Repository URI",
      "Value": {
        "Fn::Join": [
          "",
          [
            {
              "Fn::Select": [
                4,
                {
                  "Fn::Split": [
                    ":",
                    {
                      "Fn::GetAtt": [
                        "EcrConstructRepository7CDA447F",
                        "Arn",
                      ],
                    },
                  ],
                },
              ],
            },
            ".dkr.ecr.",
            {
              "Fn::Select": [
                3,
                {
                  "Fn::Split": [
                    ":",
                    {
                      "Fn::GetAtt": [
                        "EcrConstructRepository7CDA447F",
                        "Arn",
                      ],
                    },
                  ],
                },
              ],
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "EcrConstructRepository7CDA447F",
            },
          ],
        ],
      },
    },
    "EcsConstructLoadBalancerDNSF2F53CE6": {
      "Value": {
        "Fn::GetAtt": [
          "EcsConstructAlb5CEC5A25",
          "DNSName",
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "EcrConstructRepository7CDA447F": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ImageScanningConfiguration": {
          "ScanOnPush": true,
        },
        "LifecyclePolicy": {
          "LifecyclePolicyText": "{"rules":[{"rulePriority":1,"selection":{"tagStatus":"untagged","countType":"sinceImagePushed","countNumber":1,"countUnit":"days"},"action":{"type":"expire"}},{"rulePriority":2,"selection":{"tagStatus":"any","countType":"imageCountMoreThan","countNumber":5},"action":{"type":"expire"}}]}",
        },
        "RepositoryName": "english-card-battle-api-stg",
      },
      "Type": "AWS::ECR::Repository",
      "UpdateReplacePolicy": "Delete",
    },
    "EcsConstructAlb5CEC5A25": {
      "DependsOn": [
        "VpcConstructVpcPublicSubnet1DefaultRoute19512509",
        "VpcConstructVpcPublicSubnet1RouteTableAssociation6FC97BDA",
        "VpcConstructVpcPublicSubnet2DefaultRouteDF17EB05",
        "VpcConstructVpcPublicSubnet2RouteTableAssociationFE2393CB",
      ],
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "EcsConstructSgAlbDA034DDC",
              "GroupId",
            ],
          },
        ],
        "Subnets": [
          {
            "Ref": "VpcConstructVpcPublicSubnet1SubnetDD7139F9",
          },
          {
            "Ref": "VpcConstructVpcPublicSubnet2Subnet24509F7A",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "EcsConstructAlbAlbListener8102378F": {
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "EcsConstructAlbAlbListenerFromAppTargetGroupGroupA621B50F",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": {
          "Ref": "EcsConstructAlb5CEC5A25",
        },
        "Port": 80,
        "Protocol": "HTTP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "EcsConstructAlbAlbListenerFromAppTargetGroupGroupA621B50F": {
      "Properties": {
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "ip",
        "VpcId": {
          "Ref": "VpcConstructVpc3805DAA4",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "EcsConstructEcsCluster89B63FC3": {
      "Properties": {
        "ClusterSettings": [
          {
            "Name": "containerInsights",
            "Value": "enabled",
          },
        ],
      },
      "Type": "AWS::ECS::Cluster",
    },
    "EcsConstructEcsServiceTaskRoleCD4F9911": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonSSMFullAccess",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "EcsConstructEcsServiceTaskRoleDefaultPolicyC7469938": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ssmmessages:CreateControlChannel",
                "ssmmessages:CreateDataChannel",
                "ssmmessages:OpenControlChannel",
                "ssmmessages:OpenDataChannel",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "logs:DescribeLogGroups",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:DescribeLogStreams",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "EcsConstructEcsServiceTaskRoleDefaultPolicyC7469938",
        "Roles": [
          {
            "Ref": "EcsConstructEcsServiceTaskRoleCD4F9911",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "EcsConstructEcsTaskExecutionRole12DDDA63": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "EcsConstructEcsTaskExecutionRoleDefaultPolicyC7661922": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "EcsConstructTaskDefinitionapiLogGroupD1A96BBA",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "EcsConstructEcsTaskExecutionRoleDefaultPolicyC7661922",
        "Roles": [
          {
            "Ref": "EcsConstructEcsTaskExecutionRole12DDDA63",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "EcsConstructFargateServiceDFC2525C": {
      "DependsOn": [
        "EcsConstructAlbAlbListenerFromAppTargetGroupGroupA621B50F",
        "EcsConstructAlbAlbListener8102378F",
        "EcsConstructEcsServiceTaskRoleDefaultPolicyC7469938",
        "EcsConstructEcsServiceTaskRoleCD4F9911",
      ],
      "Properties": {
        "Cluster": {
          "Ref": "EcsConstructEcsCluster89B63FC3",
        },
        "DeploymentConfiguration": {
          "Alarms": {
            "AlarmNames": [],
            "Enable": false,
            "Rollback": false,
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DesiredCount": 2,
        "EnableECSManagedTags": false,
        "EnableExecuteCommand": true,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": [
          {
            "ContainerName": "api",
            "ContainerPort": 80,
            "TargetGroupArn": {
              "Ref": "EcsConstructAlbAlbListenerFromAppTargetGroupGroupA621B50F",
            },
          },
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "EcsConstructSgFargateA4239C18",
                  "GroupId",
                ],
              },
            ],
            "Subnets": [
              {
                "Ref": "VpcConstructVpcPrivateSubnet1Subnet6F75C6CC",
              },
              {
                "Ref": "VpcConstructVpcPrivateSubnet2SubnetEA9D1CCF",
              },
            ],
          },
        },
        "TaskDefinition": {
          "Ref": "EcsConstructTaskDefinition7D5C9834",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "EcsConstructSgAlbDA034DDC": {
      "Properties": {
        "GroupDescription": "stgTestStack/EcsConstruct/SgAlb",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:ALL PORTS",
            "FromPort": 0,
            "IpProtocol": "tcp",
            "ToPort": 65535,
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
        ],
        "VpcId": {
          "Ref": "VpcConstructVpc3805DAA4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "EcsConstructSgAlbtostgTestStackEcsConstructSgFargateBE14D710808596187D": {
      "Properties": {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "EcsConstructSgFargateA4239C18",
            "GroupId",
          ],
        },
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "EcsConstructSgAlbDA034DDC",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 80,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "EcsConstructSgFargateA4239C18": {
      "Properties": {
        "GroupDescription": "stgTestStack/EcsConstruct/SgFargate",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:ALL PORTS",
            "FromPort": 0,
            "IpProtocol": "tcp",
            "ToPort": 65535,
          },
        ],
        "VpcId": {
          "Ref": "VpcConstructVpc3805DAA4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "EcsConstructSgFargatefromstgTestStackEcsConstructSgAlbC181AFEC807B17ED34": {
      "Properties": {
        "Description": "from stgTestStackEcsConstructSgAlbC181AFEC:80",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "EcsConstructSgFargateA4239C18",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "EcsConstructSgAlbDA034DDC",
            "GroupId",
          ],
        },
        "ToPort": 80,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "EcsConstructTaskDefinition7D5C9834": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Essential": true,
            "Image": "amazon/amazon-ecs-sample",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "EcsConstructTaskDefinitionapiLogGroupD1A96BBA",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "englishCardBattle",
              },
            },
            "Name": "api",
            "PortMappings": [
              {
                "ContainerPort": 80,
                "HostPort": 80,
                "Protocol": "tcp",
              },
            ],
          },
        ],
        "Cpu": "512",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "EcsConstructEcsTaskExecutionRole12DDDA63",
            "Arn",
          ],
        },
        "Family": "stgTestStackEcsConstructTaskDefinition983DAFE0",
        "Memory": "1024",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "EcsConstructEcsServiceTaskRoleCD4F9911",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "EcsConstructTaskDefinitionapiLogGroupD1A96BBA": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "VpcConstructVpc3805DAA4": {
      "Properties": {
        "CidrBlock": "10.101.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "stgTestStack/VpcConstruct/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VpcConstructVpcIGWEF0A1417": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "stgTestStack/VpcConstruct/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VpcConstructVpcPrivateSubnet1DefaultRoute74CC6283": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcConstructVpcPublicSubnet1NATGatewayAC5B8D30",
        },
        "RouteTableId": {
          "Ref": "VpcConstructVpcPrivateSubnet1RouteTable4A22E9B0",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcConstructVpcPrivateSubnet1RouteTable4A22E9B0": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "stgTestStack/VpcConstruct/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VpcConstructVpc3805DAA4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcConstructVpcPrivateSubnet1RouteTableAssociationCBF38271": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcConstructVpcPrivateSubnet1RouteTable4A22E9B0",
        },
        "SubnetId": {
          "Ref": "VpcConstructVpcPrivateSubnet1Subnet6F75C6CC",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcConstructVpcPrivateSubnet1Subnet6F75C6CC": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.101.2.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "stgTestStack/VpcConstruct/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VpcConstructVpc3805DAA4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcConstructVpcPrivateSubnet2DefaultRouteE1DD5E5C": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcConstructVpcPublicSubnet1NATGatewayAC5B8D30",
        },
        "RouteTableId": {
          "Ref": "VpcConstructVpcPrivateSubnet2RouteTable8CAFC294",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcConstructVpcPrivateSubnet2RouteTable8CAFC294": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "stgTestStack/VpcConstruct/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VpcConstructVpc3805DAA4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcConstructVpcPrivateSubnet2RouteTableAssociation30321E0F": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcConstructVpcPrivateSubnet2RouteTable8CAFC294",
        },
        "SubnetId": {
          "Ref": "VpcConstructVpcPrivateSubnet2SubnetEA9D1CCF",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcConstructVpcPrivateSubnet2SubnetEA9D1CCF": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.101.3.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "stgTestStack/VpcConstruct/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VpcConstructVpc3805DAA4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcConstructVpcPublicSubnet1DefaultRoute19512509": {
      "DependsOn": [
        "VpcConstructVpcVPCGW1B486578",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcConstructVpcIGWEF0A1417",
        },
        "RouteTableId": {
          "Ref": "VpcConstructVpcPublicSubnet1RouteTable86FD3C2E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcConstructVpcPublicSubnet1EIPBB69F383": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "stgTestStack/VpcConstruct/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcConstructVpcPublicSubnet1NATGatewayAC5B8D30": {
      "DependsOn": [
        "VpcConstructVpcPublicSubnet1DefaultRoute19512509",
        "VpcConstructVpcPublicSubnet1RouteTableAssociation6FC97BDA",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcConstructVpcPublicSubnet1EIPBB69F383",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VpcConstructVpcPublicSubnet1SubnetDD7139F9",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "stgTestStack/VpcConstruct/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcConstructVpcPublicSubnet1RouteTable86FD3C2E": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "stgTestStack/VpcConstruct/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VpcConstructVpc3805DAA4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcConstructVpcPublicSubnet1RouteTableAssociation6FC97BDA": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcConstructVpcPublicSubnet1RouteTable86FD3C2E",
        },
        "SubnetId": {
          "Ref": "VpcConstructVpcPublicSubnet1SubnetDD7139F9",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcConstructVpcPublicSubnet1SubnetDD7139F9": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.101.0.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "stgTestStack/VpcConstruct/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VpcConstructVpc3805DAA4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcConstructVpcPublicSubnet2DefaultRouteDF17EB05": {
      "DependsOn": [
        "VpcConstructVpcVPCGW1B486578",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcConstructVpcIGWEF0A1417",
        },
        "RouteTableId": {
          "Ref": "VpcConstructVpcPublicSubnet2RouteTableFB581907",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcConstructVpcPublicSubnet2RouteTableAssociationFE2393CB": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcConstructVpcPublicSubnet2RouteTableFB581907",
        },
        "SubnetId": {
          "Ref": "VpcConstructVpcPublicSubnet2Subnet24509F7A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcConstructVpcPublicSubnet2RouteTableFB581907": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "stgTestStack/VpcConstruct/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VpcConstructVpc3805DAA4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcConstructVpcPublicSubnet2Subnet24509F7A": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.101.1.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "stgTestStack/VpcConstruct/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VpcConstructVpc3805DAA4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcConstructVpcVPCGW1B486578": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "VpcConstructVpcIGWEF0A1417",
        },
        "VpcId": {
          "Ref": "VpcConstructVpc3805DAA4",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
