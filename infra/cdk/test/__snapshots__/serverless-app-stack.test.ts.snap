// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`/Users/s16865/workspace/local/product/english-card-battle/infra/cdk/test/serverless-app-stack.test.ts スナップショットテスト スナップショットが一致する 1`] = `
{
  "Outputs": {
    "ApiRestApiEndpoint4DEFB5CC": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiRestApiE35FEAFE",
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "ApiRestApiDeploymentStagev157F58EAC",
            },
            "/",
          ],
        ],
      },
    },
    "AuthUserPoolClientId8216BF9A": {
      "Value": {
        "Ref": "AuthUserPoolUserPoolClientBB863FCC",
      },
    },
    "AuthUserPoolIdC0605E59": {
      "Value": {
        "Ref": "AuthUserPool8115E87F",
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "ApiRestApiANY1340C355": {
      "Properties": {
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "ApiUserPoolsAuthroizer2967CC9C",
        },
        "HttpMethod": "ANY",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ApiSampleLamdba9DBA2CBF",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Fn::GetAtt": [
            "ApiRestApiE35FEAFE",
            "RootResourceId",
          ],
        },
        "RestApiId": {
          "Ref": "ApiRestApiE35FEAFE",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiRestApiANYApiPermissionTestStackApiRestApi914E81ACANY48CD34B4": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ApiSampleLamdba9DBA2CBF",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "ApiRestApiE35FEAFE",
              },
              "/",
              {
                "Ref": "ApiRestApiDeploymentStagev157F58EAC",
              },
              "/*/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiRestApiANYApiPermissionTestTestStackApiRestApi914E81ACANYED3364A6": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ApiSampleLamdba9DBA2CBF",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "ApiRestApiE35FEAFE",
              },
              "/test-invoke-stage/*/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiRestApiAccount598A1DA6": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ApiRestApiE35FEAFE",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiRestApiCloudWatchRoleB7879BFC",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiRestApiCloudWatchRoleB7879BFC": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiRestApiDeploymentDC05A82D382718a6dd343826668c6cf2cce6b8e6": {
      "DependsOn": [
        "ApiRestApiproxyANY7D1D2F15",
        "ApiRestApiproxyOPTIONS14872AA4",
        "ApiRestApiproxy95CB4350",
        "ApiRestApiANY1340C355",
        "ApiRestApiOPTIONSB925735A",
      ],
      "Properties": {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": {
          "Ref": "ApiRestApiE35FEAFE",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "ApiRestApiDeploymentStagev157F58EAC": {
      "DependsOn": [
        "ApiRestApiAccount598A1DA6",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "ApiRestApiDeploymentDC05A82D382718a6dd343826668c6cf2cce6b8e6",
        },
        "RestApiId": {
          "Ref": "ApiRestApiE35FEAFE",
        },
        "StageName": "v1",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "ApiRestApiE35FEAFE": {
      "Properties": {
        "Name": "RestApi",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ApiRestApiOPTIONSB925735A": {
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Max-Age": "'300'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Max-Age": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Fn::GetAtt": [
            "ApiRestApiE35FEAFE",
            "RootResourceId",
          ],
        },
        "RestApiId": {
          "Ref": "ApiRestApiE35FEAFE",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiRestApiproxy95CB4350": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiRestApiE35FEAFE",
            "RootResourceId",
          ],
        },
        "PathPart": "{proxy+}",
        "RestApiId": {
          "Ref": "ApiRestApiE35FEAFE",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "ApiRestApiproxyANY7D1D2F15": {
      "Properties": {
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "ApiUserPoolsAuthroizer2967CC9C",
        },
        "HttpMethod": "ANY",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ApiSampleLamdba9DBA2CBF",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "ApiRestApiproxy95CB4350",
        },
        "RestApiId": {
          "Ref": "ApiRestApiE35FEAFE",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiRestApiproxyANYApiPermissionTestStackApiRestApi914E81ACANYproxyB0CF38AA": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ApiSampleLamdba9DBA2CBF",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "ApiRestApiE35FEAFE",
              },
              "/",
              {
                "Ref": "ApiRestApiDeploymentStagev157F58EAC",
              },
              "/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiRestApiproxyANYApiPermissionTestTestStackApiRestApi914E81ACANYproxy33B067D6": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ApiSampleLamdba9DBA2CBF",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "ApiRestApiE35FEAFE",
              },
              "/test-invoke-stage/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiRestApiproxyOPTIONS14872AA4": {
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Max-Age": "'300'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Max-Age": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Ref": "ApiRestApiproxy95CB4350",
        },
        "RestApiId": {
          "Ref": "ApiRestApiE35FEAFE",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiSampleLamdba9DBA2CBF": {
      "DependsOn": [
        "ApiSampleLamdbaServiceRoleDefaultPolicyD1AD3FE7",
        "ApiSampleLamdbaServiceRole5047C520",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "a5810395091e8eada051a2fab1947e66a27603d8b72a0b4faf6768bdd2dd7e1a.zip",
        },
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "DataStoreSampleTable06F53423",
            },
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "ApiSampleLamdbaServiceRole5047C520",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "ApiSampleLamdbaServiceRole5047C520": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ApiSampleLamdbaServiceRoleDefaultPolicyD1AD3FE7": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "DataStoreSampleTable06F53423",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ApiSampleLamdbaServiceRoleDefaultPolicyD1AD3FE7",
        "Roles": [
          {
            "Ref": "ApiSampleLamdbaServiceRole5047C520",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ApiUserPoolsAuthroizer2967CC9C": {
      "Properties": {
        "IdentitySource": "method.request.header.Authorization",
        "Name": "TestStackApiUserPoolsAuthroizer259BCC33",
        "ProviderARNs": [
          {
            "Fn::GetAtt": [
              "AuthUserPool8115E87F",
              "Arn",
            ],
          },
        ],
        "RestApiId": {
          "Ref": "ApiRestApiE35FEAFE",
        },
        "Type": "COGNITO_USER_POOLS",
      },
      "Type": "AWS::ApiGateway::Authorizer",
    },
    "AuthUserPool8115E87F": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AccountRecoverySetting": {
          "RecoveryMechanisms": [
            {
              "Name": "verified_phone_number",
              "Priority": 1,
            },
            {
              "Name": "verified_email",
              "Priority": 2,
            },
          ],
        },
        "AdminCreateUserConfig": {
          "AllowAdminCreateUserOnly": false,
        },
        "AutoVerifiedAttributes": [
          "email",
        ],
        "DeletionProtection": "ACTIVE",
        "EmailVerificationMessage": "The verification code to your new account is {####}",
        "EmailVerificationSubject": "Verify your new account",
        "SmsVerificationMessage": "The verification code to your new account is {####}",
        "UsernameAttributes": [
          "email",
        ],
        "VerificationMessageTemplate": {
          "DefaultEmailOption": "CONFIRM_WITH_CODE",
          "EmailMessage": "The verification code to your new account is {####}",
          "EmailSubject": "Verify your new account",
          "SmsMessage": "The verification code to your new account is {####}",
        },
      },
      "Type": "AWS::Cognito::UserPool",
      "UpdateReplacePolicy": "Retain",
    },
    "AuthUserPoolUserPoolClientBB863FCC": {
      "Properties": {
        "AllowedOAuthFlows": [
          "code",
        ],
        "AllowedOAuthFlowsUserPoolClient": true,
        "AllowedOAuthScopes": [
          "email",
          "profile",
          "openid",
        ],
        "CallbackURLs": [
          "https://example.com",
        ],
        "ExplicitAuthFlows": [
          "ALLOW_ADMIN_USER_PASSWORD_AUTH",
          "ALLOW_REFRESH_TOKEN_AUTH",
        ],
        "GenerateSecret": false,
        "LogoutURLs": [
          "https://example.com",
        ],
        "SupportedIdentityProviders": [
          "COGNITO",
        ],
        "UserPoolId": {
          "Ref": "AuthUserPool8115E87F",
        },
      },
      "Type": "AWS::Cognito::UserPoolClient",
    },
    "AuthUserPoolUserPoolDomain4EEAE7CF": {
      "Properties": {
        "Domain": "dev-mastering-cdk-serverless-app",
        "UserPoolId": {
          "Ref": "AuthUserPool8115E87F",
        },
      },
      "Type": "AWS::Cognito::UserPoolDomain",
    },
    "DataStoreSampleTable06F53423": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH",
          },
        ],
        "Replicas": [
          {
            "Region": {
              "Ref": "AWS::Region",
            },
          },
        ],
      },
      "Type": "AWS::DynamoDB::GlobalTable",
      "UpdateReplacePolicy": "Delete",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
